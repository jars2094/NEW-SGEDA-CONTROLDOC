@page "/BranchOffice"
@using System.Text.Json;
@layout MenuLayout


<ModalBranchOffices @ref="modalbranchOffice" IdModalIdentifier="Modal-Branch-Office" OnChangeData="HandleRefreshGridDataAsync"></ModalBranchOffices>



<div class="container-fluid mt-5">
    <!-- Parte 1: Título y Contenido alineado a la izquierda -->
    <div class="row">
        <div class="col-8">
            <h1>Administración - Sucursales de la Organización</h1>

        </div>
        <!-- Parte 2: Botón azul alineado a la derecha -->
        <div class="col-4 text-end">
            <button class="btn btn-primary btn-lg btn-block" @onclick="mostrarModal">Crear</button>
        </div>
    </div>

    <!-- Parte 3: Grilla -->
    <div class="row mt-4">
        <div class="col">
             

            <TelerikGrid Data="branchOfficesList" PageSize="meta.pageSize"
                         Sortable="true"
                         FilterMode="GridFilterMode.FilterMenu"
                         Resizable="true"
                         Reorderable="true"
                         EditMode="GridEditMode.Popup"
                         SelectionMode="GridSelectionMode.None">
                <GridColumns>

                    <GridCommandColumn Width="80px" Title="Editar" HeaderClass="center-wrap" Visible="true">
                        <GridCommandButton Icon="@SvgIcon.Pencil" OnClick="@((args)=> ShowModalEdit(args.Item as BranchOfficesDtoResponse))"></GridCommandButton>
                        <GridCommandButton Icon="@SvgIcon.Trash" OnClick="@((args)=> ShowModalDelete(args.Item as BranchOfficesDtoResponse))"></GridCommandButton>
                    </GridCommandColumn>
                    <GridColumn Field="BranchOfficeId"
                                Title="ID"
                                Width="150px"
                                Filterable="true"
                                TextAlign="ColumnTextAlign.Center"
                                HeaderClass="center-wrap" />
                    <GridColumn Field="Code"
                                Title="Código"
                                Width="150px"
                                Filterable="true"
                                TextAlign="ColumnTextAlign.Center"
                                HeaderClass="center-wrap" />
                    <GridColumn Field="NameOffice"
                                Title="Nombre de la Oficina"
                                Width="150px"
                                Filterable="true"
                                TextAlign="ColumnTextAlign.Center"
                                HeaderClass="center-wrap" />
                    <GridColumn Field="Region"
                                Title="Región"
                                Width="150px"
                                Filterable="true"
                                TextAlign="ColumnTextAlign.Center"
                                HeaderClass="center-wrap" />
                    <GridColumn Field="Territory"
                                Title="Territorio"
                                Width="150px"
                                Filterable="true"
                                TextAlign="ColumnTextAlign.Center"
                                HeaderClass="center-wrap" />

                </GridColumns>
            </TelerikGrid>

           
        </div>
    </div>

    <!-- Parte 4: Botones en la izquierda, centro y derecha -->
<PaginationComponent ObjectMeta="meta" T="BranchOfficesDtoResponse" OnPaginationRefresh="HandlePaginationGrid"></PaginationComponent>
</div>
<ModalNotificationsComponent @ref="notificationModal" OnModalClosed="HandleModalNotiClose"></ModalNotificationsComponent>
<ModalNotificationsComponent @ref="notificationModalSucces" OnModalClosed="HandleModalNotiClose"></ModalNotificationsComponent>


@* <style>
    .k-button-solid-base {
        border: none;
        color: #41BAEA;
        background: none;
    }

    .k-grid th.center-wrap {
        justify-content: center;
        text-align: center;
        white-space: normal;
        vertical-align: middle;
        overflow: hidden; /* Evita que el texto desborde la columna */
    }

        .k-grid th.center-wrap .k-column-title {
            white-space: nowrap; /* Evita que el título se divida en varias líneas */
        }

    div.k-grid-header, div.k-grid-footer {
        background-color: #F5F5F5;
    }

    .k-grid tr.k-alt {
        background-color: white;
    }

    .k-grid td {
        border-bottom-width: 1px;
        border-color: black;
        vertical-align: middle;
        border-right-width: 0;
        border-left-width: 0;
    }

    .k-grid-header, .k-header, th.k-header, .k-grid-header-wrap, .k-grouping-header, .k-grouping-header .k-group-indicator, .k-grid td, .k-grid-footer, .k-grid-footer-wrap, .k-grid-content-locked, .k-grid-footer-locked, .k-grid-header-locked, .k-filter-row > td, .k-filter-row > th {
        font-family: 'Poppins', sans-serif;
        border-color: black;
        border-right-width: 0;
        border-left-width: 0;
    }
</style> *@




                       











				

